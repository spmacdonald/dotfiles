# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal screen-256color

# Create splits and vertical splits
bind-key v split-window -h
bind-key ^V split-window -h
bind-key s split-window
bind-key ^S split-window

# Mouse mode
set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to shift-ctrl-<h,j,k,l> in iTerm.
bind-key J resize-pane -D
bind-key K resize-pane -U
bind-key H resize-pane -L
bind-key L resize-pane -R

# Window switching
bind-key -n C-right next
bind-key -n C-left prev
bind-key -n C-j select-pane -D
bind-key -n C-k select-pane -U
bind-key -n C-l select-pane -R
bind-key -n C-h select-pane -L

# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys vi

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi

# color scheme (styled as vim-powerline)
set -g status-fg white
set -g status-bg colour234
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221

# Status bar on top
set-option -g status-position top

# Screen like binding
unbind C-b
set -g prefix C-a

# No escape time for vi mode
set -sg escape-time 0

# Reload config
bind-key R source-file ~/.tmux.conf \; display-message "Config reloaded..."
